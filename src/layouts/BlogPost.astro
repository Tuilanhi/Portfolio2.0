---
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import Content from "../components/Content.astro";
import { SITE_TITLE } from "../consts";
import Icon from "../components/Icon.astro";
export interface Props {
  content: {
    title: string;
    description: string;
    createdAt?: string;
    updatedAt?: string;
    heroImage?: string;
    shortDescription: string;
    code: string;
    source: string;
  };
}
const {
  content: { title, description, heroImage, code, source },
} = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <BaseHead
      title={title + ` / ${SITE_TITLE}`}
      description={description}
      image={heroImage}
    />
  </head>
  <body>
    <div
      id="dot"
      class="pointer-events-none fixed z-50 hidden h-2 w-2 rounded-full bg-orange-200"
      style="transition: transform 0.2s;"
    >
    </div>
    <Header title={SITE_TITLE} />
    <main class="mb-10 pt-[56px]">
      <Content className="pt-6">
        <div class="mb-8">
          {
            heroImage && (
              <img
                class="slide-item rounded-xl border border-accent-gray"
                width={720}
                height={360}
                src={heroImage}
                alt=""
                data-transition-duration="0.7s"
                data-transition-easing="ease"
              />
            )
          }
        </div>
        <h1
          class="slide-item my-1 text-3xl font-bold text-sky-blue"
          data-transition-duration="0.8s"
          data-transition-easing="ease"
        >
          {title}
        </h1>
        <div
          class="slide-item my-4 flex"
          data-transition-duration="0.9s"
          data-transition-easing="ease"
        >
          <p class="mr-2">{description}</p>
          <Icon
            icon="arrow-bend-right-down"
            size="1.1em"
            color="var(--accent-light)"
            class="mt-4"
          />
        </div>
        <div
          class="slide-item mb-5 indent-4"
          data-transition-duration="1s"
          data-transition-easing="ease"
        >
          <slot />
        </div>
        <div
          class="slide-item mr-auto flex pt-2"
          style="font-size: var(--text-2sm);"
          data-transition-duration="1.1s"
          data-transition-easing="ease"
        >
          <span id="content-heading">Stack:</span>{code}
        </div>
        <div
          class="slide-item mb-10 mr-auto flex pt-2"
          style="font-size: var(--text-2sm);"
          data-transition-duration="1.1s"
          data-transition-easing="ease"
        >
          <span id="content-heading">Source:</span><a href={source}
            ><Icon
              icon="github-logo"
              size="1.1em"
              color="var(--accent-light)"
            />
          </a>
        </div>
      </Content>
    </main>
    <div
      class="slide-item"
      data-transition-duration="1.2s"
      data-transition-easing="ease"
    >
      <Footer />
    </div>

    <script>
      // Check if the device is a laptop and has a mouse
      const isLaptopWithMouse = () => {
        const isTouchDevice =
          "ontouchstart" in window || navigator.maxTouchPoints > 0;
        const isLaptop = window.innerWidth >= 1024;
        return isLaptop && !isTouchDevice;
      };

      // Show or hide the dot based on the device type
      const dotElement = document.getElementById("dot");
      if (isLaptopWithMouse()) {
        dotElement.classList.remove("hidden");
      } else {
        dotElement.classList.add("hidden");
      }

      // Move the dot with the mouse
      document.addEventListener("mousemove", (event) => {
        if (isLaptopWithMouse()) {
          dotElement.style.transform = `translate(${event.clientX}px, ${event.clientY}px)`;
        }
      });

      window.addEventListener("load", function () {
        const slideItems = document.querySelectorAll(".slide-item");
        slideItems.forEach(function (item, index) {
          const duration =
            item.getAttribute("data-transition-duration") || "0.5s";
          const easing = item.getAttribute("data-transition-easing") || "ease";
          item.style.transitionDuration = duration;
          item.style.transitionTimingFunction = easing;
          item.style.transitionDelay = `${index * 0.2}s`;
          item.classList.add("slide-in");
        });
      });
    </script>
  </body>
</html>
